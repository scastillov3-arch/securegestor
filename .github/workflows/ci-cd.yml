name: CI - SecureGestor

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
        ports:
          - 5432:5432
        # Quitamos health-cmd porque no soporta secrets directamente
        options: >-
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres to be ready
        run: |
          for i in $(seq 1 30); do
            pg_isready -h localhost -U ${{ secrets.DB_USER }} && break || sleep 1
          done

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          # Sincroniza la DB y ejecuta tests
          node -e "require('./src/models').sequelize.sync().then(()=>console.log('DB synced')).catch(e=>{console.error(e); process.exit(1)})"
          npm test

      - name: Run npm audit
        run: npm audit --audit-level=moderate || true

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Analyze
        uses: github/codeql-action/analyze@v2
